package nz.ac.canterbury.seng302.portfolio.controller;

import nz.ac.canterbury.seng302.portfolio.model.dto.UserRequest;
import nz.ac.canterbury.seng302.portfolio.authentication.AuthenticationException;
import nz.ac.canterbury.seng302.portfolio.service.LoginService;
import nz.ac.canterbury.seng302.shared.identityprovider.AuthenticateResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * This class is responsible for authenticating users and adding the token cookie to their browser.
 */
@Controller
public class LoginController {

    private final Logger logger = LoggerFactory.getLogger(this.getClass());

    /** To give authenticated clients an access token in a cookie */
    @Autowired
    private LoginService loginService;

    private final String loginHtmlName = "login";


    /**
     * Shows the login page to anyone who wants to see it.
     *
     * @return The Thymeleaf login html template.
     */
    @GetMapping("/login")
    public String showLogin() {
        return loginHtmlName;
    }


    /**
     * Attempts to authenticate with the Identity Provider via gRPC.
     *
     * This process works in a few stages:
     * 1.  We send the username and password to the IdP
     * 2.  We check the response, and if it is successful we add a cookie to the HTTP response so that
     * the client's browser will store it to be used for future authentication with this service.
     * 3.  We return the thymeleaf login template with the 'message' given by the identity provider,
     * this message will be something along the lines of "Logged in successfully!",
     * "Bad username or password", etc.
     *
     * @param request  HTTP request sent to this endpoint
     * @param response HTTP response that will be returned by this endpoint
     * @param model    Parameters sent to thymeleaf template to be rendered into HTML
     * @return Message generated by IdP about authenticate attempt
     */
    @PostMapping("/login")
    public ModelAndView login(
            HttpServletRequest request,
            HttpServletResponse response,
            @ModelAttribute(name = "loginForm") UserRequest userRequest,
            Model model
    ) {
        logger.info("POST REQUEST /login - attempt to log in username: {}", userRequest.getUsername());
        AuthenticateResponse loginReply;
        //This try/catch block is the login attempt
        try {
            loginReply = loginService.attemptLogin(userRequest, request, response);
        } catch (AuthenticationException e) {
            // Note this is logged when the error is thrown
            model.addAttribute("errorMessage", "Error connecting to Identity Provider... " +
                    "Try again later.");
            return new ModelAndView(loginHtmlName);
        }
        // If login was successful redirect to account, otherwise add failure message
        if (loginReply.getSuccess()) {
            logger.info("Login Successful - redirect to account page for username {}", loginReply.getUsername());
            return new ModelAndView("redirect:portfolio?projectId=1");
        } else {
            // Logged in attempt login method
            model.addAttribute("errorMessage", loginReply.getMessage());
            return new ModelAndView(loginHtmlName);
        }
    }
}
