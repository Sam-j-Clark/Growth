import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'se.thinkcode.cucumber-runner' version '0.0.8'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

ext {
    junitVersion = '5.8.2'
    cucumberVersion = '6.10.4'
}


group = 'nz.ac.canterbury.seng302'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

wrapper {
    gradleVersion = '7.4'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars.npm:sockjs-client:1.6.1'
    implementation 'org.webjars.npm:stomp__stompjs:6.1.2'


    implementation 'net.devh:grpc-client-spring-boot-starter:2.13.1.RELEASE' // GRPC client dependencies
    implementation 'nz.ac.canterbury.seng302:shared:1.0' // Local package containing .proto files

    implementation 'io.jsonwebtoken:jjwt-api:0.11.0'
    implementation 'junit:junit:4.13.1'

    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.4'


    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

//    // https://mvnrepository.com/artifact/com.h2database/h2
//    implementation group: 'com.h2database', name: 'h2', version: '2.1.210'
    runtimeOnly 'com.h2database:h2'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.6.4'


    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.2'

    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"

    testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${junitVersion}"


}

task cucumberCli() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:target/cucumber-report.html',
                    '--glue', 'nz.ac.canterbury.seng302.portfolio.cucumber',
                    'src/test/resources']
        }
    }
}

cucumber {
    main = 'io.cucumber.core.cli.Main'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

test {
    useJUnitPlatform()

    testLogging {
        events TestLogEvent.FAILED, TestLogEvent.PASSED, TestLogEvent.SKIPPED
    }

    systemProperties(project.gradle.startParameter.systemPropertiesArgs)
    finalizedBy jacocoTestReport
}


tasks.named('test') {
    useJUnitPlatform()
}


// Jacoco test coverage configuration
jacoco {
    toolVersion = "0.8.7"
}

// select what reports Jacoco generates and where to put them
jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/jacoco/test-report.xml")
        csv.enabled false
        html.destination file("${buildDir}/jacoco/html")
    }
}

// Sonarqube specific configuration (task)
sonarqube {
    properties {
        property "sonar.projectKey", "team-600-portfolio"
        property "sonar.projectName", "team 600 - portfolio"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.host.url", "https://sonarqube.csse.canterbury.ac.nz"
        property "sonar.login", "75aa849c70fb6805df04e63e7f42b1b93e9207cb"
    }
}
